/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CarbonToken,
  CarbonTokenInterface,
} from "../../../contracts/carbonToken.sol/CarbonToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "CurrentSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "isStaked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nft",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "setMinterNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakedTotal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingStartTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenOwnerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000600d553480156200001657600080fd5b506040518060400160405280600f81526020017f41786f6e436172626f6e546f6b656e00000000000000000000000000000000008152506040518060400160405280600381526020017f414354000000000000000000000000000000000000000000000000000000000081525081600390816200009491906200036a565b508060049081620000a691906200036a565b50505033600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000451565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200017257607f821691505b6020821081036200018857620001876200012a565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001f27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620001b3565b620001fe8683620001b3565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200024b620002456200023f8462000216565b62000220565b62000216565b9050919050565b6000819050919050565b62000267836200022a565b6200027f620002768262000252565b848454620001c0565b825550505050565b600090565b6200029662000287565b620002a38184846200025c565b505050565b5b81811015620002cb57620002bf6000826200028c565b600181019050620002a9565b5050565b601f8211156200031a57620002e4816200018e565b620002ef84620001a3565b81016020851015620002ff578190505b620003176200030e85620001a3565b830182620002a8565b50505b505050565b600082821c905092915050565b60006200033f600019846008026200031f565b1980831691505092915050565b60006200035a83836200032c565b9150826002028217905092915050565b6200037582620000f0565b67ffffffffffffffff811115620003915762000390620000fb565b5b6200039d825462000159565b620003aa828285620002cf565b600060209050601f831160018114620003e25760008415620003cd578287015190505b620003d985826200034c565b86555062000449565b601f198416620003f2866200018e565b60005b828110156200041c57848901518255600182019150602085019450602081019050620003f5565b868310156200043c578489015162000438601f8916826200032c565b8355505b6001600288020188555050505b505050505050565b61194180620004616000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806389885a59116100ad578063a9059cbb11610071578063a9059cbb1461036f578063baa51f861461039f578063d66692a7146103cf578063dd62ed3e146103ed578063f9e456ed1461041d5761012c565b806389885a59146102b75780638da5cb5b146102e757806395d89b4114610305578063a133741014610323578063a457c2d71461033f5761012c565b8063313ce567116100f4578063313ce567146101fd578063395093511461021b57806347ccca021461024b5780636abfd1831461026957806370a08231146102875761012c565b806306fdde0314610131578063095ea7b31461014f578063150b7a021461017f57806318160ddd146101af57806323b872dd146101cd575b600080fd5b61013961043b565b6040516101469190610ef9565b60405180910390f35b61016960048036038101906101649190610fc3565b6104cd565b604051610176919061101e565b60405180910390f35b6101996004803603810190610194919061116e565b6104f0565b6040516101a6919061122c565b60405180910390f35b6101b7610504565b6040516101c49190611256565b60405180910390f35b6101e760048036038101906101e29190611271565b61050e565b6040516101f4919061101e565b60405180910390f35b61020561053d565b60405161021291906112e0565b60405180910390f35b61023560048036038101906102309190610fc3565b610546565b604051610242919061101e565b60405180910390f35b61025361057d565b604051610260919061135a565b60405180910390f35b6102716105a3565b60405161027e9190611256565b60405180910390f35b6102a1600480360381019061029c9190611375565b6105a9565b6040516102ae9190611256565b60405180910390f35b6102d160048036038101906102cc91906113a2565b6105f1565b6040516102de91906113de565b60405180910390f35b6102ef610624565b6040516102fc91906113de565b60405180910390f35b61030d61064a565b60405161031a9190610ef9565b60405180910390f35b61033d60048036038101906103389190611271565b6106dc565b005b61035960048036038101906103549190610fc3565b61072c565b604051610366919061101e565b60405180910390f35b61038960048036038101906103849190610fc3565b6107a3565b604051610396919061101e565b60405180910390f35b6103b960048036038101906103b491906113a2565b6107c6565b6040516103c6919061101e565b60405180910390f35b6103d76107e6565b6040516103e49190611256565b60405180910390f35b610407600480360381019061040291906113f9565b6107ec565b6040516104149190611256565b60405180910390f35b610425610873565b6040516104329190611256565b60405180910390f35b60606003805461044a90611468565b80601f016020809104026020016040519081016040528092919081815260200182805461047690611468565b80156104c35780601f10610498576101008083540402835291602001916104c3565b820191906000526020600020905b8154815290600101906020018083116104a657829003601f168201915b5050505050905090565b6000806104d8610879565b90506104e5818585610881565b600191505092915050565b600063150b7a0260e01b9050949350505050565b6000600254905090565b600080610519610879565b9050610526858285610a4a565b610531858585610ad6565b60019150509392505050565b60006012905090565b600080610551610879565b905061057281858561056385896107ec565b61056d91906114c8565b610881565b600191505092915050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60075481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60096020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606004805461065990611468565b80601f016020809104026020016040519081016040528092919081815260200182805461068590611468565b80156106d25780601f106106a7576101008083540402835291602001916106d2565b820191906000526020600020905b8154815290600101906020018083116106b557829003601f168201915b5050505050905090565b81600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506107278382610d4c565b505050565b600080610737610879565b9050600061074582866107ec565b90508381101561078a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107819061156e565b60405180910390fd5b6107978286868403610881565b60019250505092915050565b6000806107ae610879565b90506107bb818585610ad6565b600191505092915050565b600a6020528060005260406000206000915054906101000a900460ff1681565b60065481565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600d5481565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e790611600565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361095f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095690611692565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610a3d9190611256565b60405180910390a3505050565b6000610a5684846107ec565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610ad05781811015610ac2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab9906116fe565b60405180910390fd5b610acf8484848403610881565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3c90611790565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bab90611822565b60405180910390fd5b610bbf838383610e5f565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3c906118b4565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d339190611256565b60405180910390a3610d46848484610e64565b50505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8330846040518463ffffffff1660e01b8152600401610dab939291906118d4565b600060405180830381600087803b158015610dc557600080fd5b505af1158015610dd9573d6000803e3d6000fd5b50505050336009600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600a600083815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ea3578082015181840152602081019050610e88565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ecb82610e69565b610ed58185610e74565b9350610ee5818560208601610e85565b610eee81610eaf565b840191505092915050565b60006020820190508181036000830152610f138184610ec0565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f5a82610f2f565b9050919050565b610f6a81610f4f565b8114610f7557600080fd5b50565b600081359050610f8781610f61565b92915050565b6000819050919050565b610fa081610f8d565b8114610fab57600080fd5b50565b600081359050610fbd81610f97565b92915050565b60008060408385031215610fda57610fd9610f25565b5b6000610fe885828601610f78565b9250506020610ff985828601610fae565b9150509250929050565b60008115159050919050565b61101881611003565b82525050565b6000602082019050611033600083018461100f565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61107b82610eaf565b810181811067ffffffffffffffff8211171561109a57611099611043565b5b80604052505050565b60006110ad610f1b565b90506110b98282611072565b919050565b600067ffffffffffffffff8211156110d9576110d8611043565b5b6110e282610eaf565b9050602081019050919050565b82818337600083830152505050565b600061111161110c846110be565b6110a3565b90508281526020810184848401111561112d5761112c61103e565b5b6111388482856110ef565b509392505050565b600082601f83011261115557611154611039565b5b81356111658482602086016110fe565b91505092915050565b6000806000806080858703121561118857611187610f25565b5b600061119687828801610f78565b94505060206111a787828801610f78565b93505060406111b887828801610fae565b925050606085013567ffffffffffffffff8111156111d9576111d8610f2a565b5b6111e587828801611140565b91505092959194509250565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611226816111f1565b82525050565b6000602082019050611241600083018461121d565b92915050565b61125081610f8d565b82525050565b600060208201905061126b6000830184611247565b92915050565b60008060006060848603121561128a57611289610f25565b5b600061129886828701610f78565b93505060206112a986828701610f78565b92505060406112ba86828701610fae565b9150509250925092565b600060ff82169050919050565b6112da816112c4565b82525050565b60006020820190506112f560008301846112d1565b92915050565b6000819050919050565b600061132061131b61131684610f2f565b6112fb565b610f2f565b9050919050565b600061133282611305565b9050919050565b600061134482611327565b9050919050565b61135481611339565b82525050565b600060208201905061136f600083018461134b565b92915050565b60006020828403121561138b5761138a610f25565b5b600061139984828501610f78565b91505092915050565b6000602082840312156113b8576113b7610f25565b5b60006113c684828501610fae565b91505092915050565b6113d881610f4f565b82525050565b60006020820190506113f360008301846113cf565b92915050565b600080604083850312156114105761140f610f25565b5b600061141e85828601610f78565b925050602061142f85828601610f78565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061148057607f821691505b60208210810361149357611492611439565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114d382610f8d565b91506114de83610f8d565b92508282019050808211156114f6576114f5611499565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611558602583610e74565b9150611563826114fc565b604082019050919050565b600060208201905081810360008301526115878161154b565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006115ea602483610e74565b91506115f58261158e565b604082019050919050565b60006020820190508181036000830152611619816115dd565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061167c602283610e74565b915061168782611620565b604082019050919050565b600060208201905081810360008301526116ab8161166f565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006116e8601d83610e74565b91506116f3826116b2565b602082019050919050565b60006020820190508181036000830152611717816116db565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061177a602583610e74565b91506117858261171e565b604082019050919050565b600060208201905081810360008301526117a98161176d565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061180c602383610e74565b9150611817826117b0565b604082019050919050565b6000602082019050818103600083015261183b816117ff565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b600061189e602683610e74565b91506118a982611842565b604082019050919050565b600060208201905081810360008301526118cd81611891565b9050919050565b60006060820190506118e960008301866113cf565b6118f660208301856113cf565b6119036040830184611247565b94935050505056fea2646970667358221220c9a3a29d47e19761a76ce9552da64a8bcae360386ce122ed8536b8bcafa298ef64736f6c63430008110033";

type CarbonTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CarbonTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CarbonToken__factory extends ContractFactory {
  constructor(...args: CarbonTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CarbonToken> {
    return super.deploy(overrides || {}) as Promise<CarbonToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CarbonToken {
    return super.attach(address) as CarbonToken;
  }
  override connect(signer: Signer): CarbonToken__factory {
    return super.connect(signer) as CarbonToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CarbonTokenInterface {
    return new utils.Interface(_abi) as CarbonTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CarbonToken {
    return new Contract(address, _abi, signerOrProvider) as CarbonToken;
  }
}
